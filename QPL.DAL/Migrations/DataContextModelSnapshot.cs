// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QPL.DAL.EntityFramework.Context;

#nullable disable

namespace QPL.DAL.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "UCH010",
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(5188),
                            IsActive = false,
                            IsDeleted = false,
                            Name = "ARDUINO",
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(5191)
                        },
                        new
                        {
                            Id = 2,
                            Code = "RAD090",
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(5193),
                            IsActive = false,
                            IsDeleted = false,
                            Name = "RADIAN HEATSINKS",
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(5194)
                        });
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EngineeringStatus")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ManufacturerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("PrevEngineeringStatus")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("ProductDefinitionId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("ProductDefinitionId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(1822),
                            EngineeringStatus = "DHR01F2212",
                            IsActive = false,
                            IsDeleted = false,
                            ManufacturerCode = "",
                            ManufacturerId = 1,
                            PrevEngineeringStatus = "RS1F2212",
                            ProductDefinitionId = 1,
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(1826)
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(1827),
                            EngineeringStatus = "DDCFEEE",
                            IsActive = false,
                            IsDeleted = false,
                            ManufacturerCode = "",
                            ManufacturerId = 1,
                            PrevEngineeringStatus = "RE21232",
                            ProductDefinitionId = 1,
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 526, DateTimeKind.Local).AddTicks(1828)
                        });
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.ProductDefinition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPC")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Comments")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Concept")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("DisassembledOrReusable")
                        .HasColumnType("bit");

                    b.Property<string>("EngineeringCode")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("FlammabilityRating")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("NortelCpc")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("PackageType")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RadiassionRating")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("RoshStatus")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("SpecNo")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("ProductDefinitions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPC = "A9904473",
                            Comments = "NT : A0609386",
                            Concept = "RS1F2212",
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 525, DateTimeKind.Local).AddTicks(6141),
                            Description = "1/4W 200 OHM 1% SM-RES.",
                            DisassembledOrReusable = false,
                            EngineeringCode = "CHR01F2212",
                            FlammabilityRating = "",
                            IsActive = false,
                            IsDeleted = false,
                            NortelCpc = "A0609386",
                            PackageType = "",
                            RadiassionRating = "",
                            RoshStatus = "",
                            SpecNo = "NPS25161-20",
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 525, DateTimeKind.Local).AddTicks(6156)
                        },
                        new
                        {
                            Id = 2,
                            CPC = "A9904474",
                            Comments = "NT : A0609369  ",
                            Concept = "RS1F2212",
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 525, DateTimeKind.Local).AddTicks(6158),
                            Description = "1/16W 33,2KOHM 1%SM-RES ",
                            DisassembledOrReusable = false,
                            EngineeringCode = "CHR01F3322",
                            FlammabilityRating = "",
                            IsActive = false,
                            IsDeleted = false,
                            NortelCpc = "A0609369",
                            PackageType = "",
                            RadiassionRating = "",
                            RoshStatus = "",
                            SpecNo = "NPS25161-20",
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 525, DateTimeKind.Local).AddTicks(6159)
                        });
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleName")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 530, DateTimeKind.Local).AddTicks(3793),
                            IsActive = false,
                            IsDeleted = false,
                            RoleName = 3,
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 530, DateTimeKind.Local).AddTicks(3799)
                        });
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveQPLSearch")
                        .IsRequired()
                        .HasMaxLength(2147483647)
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RoleId");

                    b.HasIndex("UpdatedById");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActiveQPLSearch = "",
                            CreatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 531, DateTimeKind.Local).AddTicks(7513),
                            IsActive = false,
                            IsDeleted = false,
                            RoleId = 1,
                            UpdatedDate = new DateTime(2023, 11, 29, 10, 15, 49, 531, DateTimeKind.Local).AddTicks(7516),
                            UserName = "hiarslan"
                        });
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Manufacturer", b =>
                {
                    b.HasOne("QPL.DAL.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QPL.DAL.Entities.Concrete.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Product", b =>
                {
                    b.HasOne("QPL.DAL.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QPL.DAL.Entities.Concrete.Manufacturer", "Manufacturer")
                        .WithMany("Products")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QPL.DAL.Entities.Concrete.ProductDefinition", "ProductDefinition")
                        .WithMany("Products")
                        .HasForeignKey("ProductDefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QPL.DAL.Entities.Concrete.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("Manufacturer");

                    b.Navigation("ProductDefinition");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.ProductDefinition", b =>
                {
                    b.HasOne("QPL.DAL.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QPL.DAL.Entities.Concrete.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Role", b =>
                {
                    b.HasOne("QPL.DAL.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QPL.DAL.Entities.Concrete.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.User", b =>
                {
                    b.HasOne("QPL.DAL.Entities.Concrete.User", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("QPL.DAL.Entities.Concrete.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QPL.DAL.Entities.Concrete.User", "UpdatedBy")
                        .WithMany()
                        .HasForeignKey("UpdatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("Role");

                    b.Navigation("UpdatedBy");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.Manufacturer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("QPL.DAL.Entities.Concrete.ProductDefinition", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
